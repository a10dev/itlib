

EXIT(2)                   Minix Programmer's Manual                    EXIT(2)


NAME
     exit, _exit - terminate a process

SYNOPSIS
     void _exit(int status)

DESCRIPTION
     _exit terminates a process with the following consequences:

          All of the descriptors open in the calling process are closed.  This
          may  entail  delays,  for  example,  waiting  for output to drain; a
          process in this state may not be killed, as it is already dying.

          If the parent process of the calling process is executing a wait  or
          is interested in the SIGCHLD signal (Minix-vmd), then it is notified
          of the calling process's termination and the low-order eight bits of
          status are made available to it; see wait(2).

          The parent process ID of all of the calling process's existing child
          processes  are  also  set  to 1.  This means that the initialization
          process (see intro(2)) inherits each of these processes as well.

     Most C programs call the library routine exit(3), which performs  cleanup
     actions in the standard I/O library before calling _exit.

RETURN VALUE
     This call never returns.

SEE ALSO
     fork(2), sigaction(2), wait(2), exit(3).






















4BSD                              May 22, 1986                               1

